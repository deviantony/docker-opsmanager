#
# MMS Configuration File
#

# #####################################
# MMS Web Server
# #####################################

# The mms.centralUrl is the top level entry URL to the MMS installation, and is used
# in a variety of settings and locations including, e.g., the links within alert emails.
# If your MMS installation contains multiple server instances proxied through a load
# balancer, then this should be the URL to the load balancer. Note that changing the
# server's port requires updating both the mms.centralUrl here as well as the BASE_PORT
# property in <install_dir>/conf/mms.conf. Default port is 8080.
# REQUIRED
# E.g., http://mms.acmewidgets.com:8080
mms.centralUrl=http://ROUTABLE_IP:8080

# Note that changing the server's backup port requires updating both the mms.backupUrl
# here as well as the BACKUP_BASE_PORT property in <install_dir>/conf/mms.conf. Default
# port is 8081.
# Required only if using Backup
# E.g., http://mms.acmewidgets.com:8081
mms.backupCentralUrl=http://ROUTABLE_IP:8081

# Run the MMS Application Server over HTTPS.
# A PEM file containing the server's certificate and private key is needed. If the PEM
# file contains an encrypted private key the password must be provided.
# The default BASE_SSL_PORT is 8443. The default BACKUP_BASE_SSL_PORT is 8444.
# These can both be edited in the <install_dir>/conf/mms.conf file.
# The ports in the centralUrls above or your load balancer configuration will need to
# reflect the port change.
mms.https.PEMKeyFile=
mms.https.PEMKeyFilePassword=

# #####################################
# MMS Email Integration
# #####################################

# Email/Reply accounts for emails.
# REQUIRED
# E.g., noreply@acmewidgets.com
mms.fromEmailAddr=alerts-opsmanager@no-reply.com
mms.replyToEmailAddr=opsmanager@no-reply.com

# Used for both sending and receiving internal system notifications
# REQUIRED
# E.g., admin-noreply@acmewidgets.com
mms.adminFromEmailAddr=mms-admin@no-reply.com
mms.adminEmailAddr=admin-mms@no-reply.com

# AWS Simple Email Service only --
# The email address to which bounce notifications are to be forwarded.
# REQUIRED
# E.g., bounce@acmewidgets.com
mms.bounceEmailAddr=bounce@no-reply.com

# Email authentication options:
# Options are:
#   com.xgen.svc.core.dao.email.AwsEmailDao
#       - (Simple Email Service, requires also setting aws.accesskey and aws.secretkey properties below)
#   com.xgen.svc.core.dao.email.JavaEmailDao
#       - (SMTP mail server such as sendmail)
mms.emailDaoClass=com.xgen.svc.core.dao.email.JavaEmailDao

# If using com.xgen.svc.mms.dao.email.JavaEmailDao, the options below may be
# used for your SMTP mail provider of choice.
#
# By default MMS server comes configured for a local SMTP server on port 25,
# which is setup by default on many *NIX platforms. Please refer to your SMTP
# provider's documentation for the appropriate settings or for how to
# configure a local SMTP server as a relay.
mms.mail.transport=smtp
mms.mail.hostname=localhost
mms.mail.port=25
mms.mail.username=
mms.mail.password=
mms.mail.tls=

# #####################################
# Hosted MMS User Authentication Settings.
# #####################################

mms.userSvcClass=com.xgen.svc.mms.svc.user.UserSvcDb
#mms.userSvcClass=com.xgen.svc.mms.svc.user.UserSvcLdap

# #####################################
# MMS MongoDB storage settings
#
# The following MongoURI parameters are for configuring the MongoDB storage
# that backs the MMS server's functionality. By default. the MMS server is
# configured to expect a local standalone instance of MongoDB running on
# the default port 27017.
#
# For more advanced configurations of the backing MongoDB store, such as
# running with replication or authentication, please refer to the
# documentation at http://mms.mongodb.com/help-hosted.
# #####################################
# The mmsdb db

mongo.mongoUri=mongodb://database:27017/
mongo.ssl=false

# #####################################
# MongoDB SSL Settings
# The following parameters are for configuring the SSL certificates to be
# used by the MMS server to connect to its MongoDB backing stores. These
# settings are only applied to the mongoUri connection above when
# `mongo.ssl` is set to true.
# CAFile - the certificate of the CA that issued the MongoDB server certificate(s)
# PEMKeyFile - a client certificate containing a certificate and private key
#             (needed when MongoDB is running with --sslCAFile)
# PEMKeyFilePassword - required if the `PEMKeyFile` contains an encrypted private key
mongodb.ssl.CAFile=
mongodb.ssl.PEMKeyFile=
mongodb.ssl.PEMKeyFilePassword=

# #####################################
# MMS Behind a Load Balancer / Proxy Server
#
# The following parameter is to configure the HTTP header, set by your load
# balancer, that contains the real client IP address. This setting must be set
# for MMS to work properly behind a load balancer.
#
# IMPORTANT: MMS uses the client IP address for auditing and access control to
# the API. When behind a load balancer your network security should not allow direct
# access to the MMS web server. Failure to restrict access will allow clients to
# potentially inject HTTP headers and spoof a client IP address.
#
# #####################################
mms.remoteIp.header=

#
# The `automation.versions.source` property controls how Ops Manager learns about
# new MongoDB releases and from what host(s) the Automation Agents will download
# the binaries for those releases.
#
# mongodb - The manifest of available MongoDB versions will automatically be pulled
#           from MongoDB, Inc. The automation agents will download MongoDB
#           binaries from mongodb.org/mongodb.com.
# local - The manifest of available MongoDB versions must be supplied on the
#         Version Manager screen of the Ops Manager UI. The automation agents
#         will download MongoDB binaries from the Ops Manager Server. The
#         tarballs containing the binaries must be placed in the directory
#         specified by the `automation.versions.directory` property.
#
automation.versions.source=mongodb
automation.versions.directory=/opt/mongodb/mms/mongodb-releases/

# #####################################
# Ping thread and queue sizes
# Generally shouldn't need to touch unless advised by MongoDB, Inc

ping.queue.size=90
ping.thread.count=25

# #####################################
# Increment settings
# Generally shouldn't need to touch unless advised by MongoDB, Inc

increment.queue.size=9000
increment.thread.count=30
increment.gle.freq=70
increment.offer.time=120000

# #####################################
# AWS key credentials (required if using Simple Email Service support. See Email authentication options above.)

aws.accesskey=
aws.secretkey=

# #####################################
# reCaptcha (optional reCaptcha validation during new user registration)

reCaptcha.enabled=false
reCaptcha.public.key=
reCaptcha.private.key=

# #####################################
# Twilio API credentials (required for SMS alert support).
# More info: http://www.twilio.com/docs/quickstart

twilio.account.sid=
twilio.auth.token=
twilio.from.num=

# #####################################
# SNMP Heartbeat Trap (optional)
# MMS can optionally be configured to periodically send out a heartbeart
# trap notification (v2c) on standard port 162 to a set of receiver hosts.
# The default send interval is every 5 minutes (defined as 300 seconds below).
# Leave snmp.default.hosts blank to disable SNMP heartbeat traps.
#
# The heartbeat trap contains a basic health message regarding the state
# of the MMS server internally. MIB file available at:
# http://downloads.mongodb.com/on-prem-monitoring/MMS-10GEN-MIB.txt
#
# Note: Setting listen port less than 1024 requires running MMS server with
# root privileges.
#
# Comma-separated list of hosts where 'heartbeat' traps will be sent
# E.g., snmp.default.hosts=snmp1.acmewidgets.com,snmp2.acmewidgets.com
snmp.default.hosts=
snmp.listen.port=11611
snmp.default.heartbeat.interval=300

# #####################################
# Multi-Factor Authentication
#
# Set this property to true to enable multi-factor authentication. Once this is
# enabled, all users will be required to set up multi-factor authentication before
# being allowed to access any login-protected pages.
mms.multiFactorAuth.require=false
mms.multiFactorAuth.allowReset=false
mms.multiFactorAuth.issuer=

# #####################################
# Public API
#
# Each MMS group has a setting that controls whether or not to enable the Public API.
# By default, users with a GLOBAL role are able to access all groups using the Public API,
# even if it is not enabled for a group. To prevent this, set the property below to false.
mms.publicApi.ignoreEnabledForGlobalRoles=true

# #####################################
# Advanced MMS User Password Management (optional)
#mms.password.minChangesBeforeReuse=
#mms.password.maxFailedAttemptsBeforeAccountLock=
#mms.password.maxDaysInactiveBeforeAccountLock=
#mms.password.maxDaysBeforeChangeRequired=

# #####################################
# Advanced MMS User Session Management (optional)
#mms.session.maxHours=

# #####################################
# Kerberos Module (optional)
#
# jvm.java.security.krb5.kdc: This should be the IP/FQDN of the KDC server. The value will be set to JVM's
# java.security.krb5.kdc.
#
# jvm.java.security.krb5.realm: This is the default REALM for Kerberos. It is being used for JVM's
# java.security.krb5.realm.
#
# mms.kerberos.principal: The principal we used to authenticate with MongoDB. This should be the exact same user
# on the mongoUri above.
#
# mms.kerberos.keyTab: The absolute path to the keytab file for the principal.
#
# mms.kerberos.debug: The debug flag to output more information on Kerberos authentication process.
#
# Please note, all the parameters are required for Kerberos authentication, except mms.kerberos.debug. The mechanism
# will not be functioning if any of the setting value is missing.
#
# Assume your kdc server FQDN is kdc.example.com, your Kerberos default realm is: EXAMPLE.COM,
# the host running MMS app is mmsweb.example.com, the Kerberos for MMS is mms/mmsweb.example.com@EXAMPLE.com,
# And you have a keytab file for mms/mmsweb.example.com@EXAMPLE.COM located at /path/to/mms.keytab, then the
# configurations would be:
#       jvm.java.security.krb5.kdc=kdc.example.com
#       jvm.java.security.krb5.realm=EXAMPLE.COM
#       mms.kerberos.principal=mms/mmsweb.example.com@EXAMPLE.COM
#       mms.kerberos.keyTab=/path/to/mms.keytab
#       mms.kerberos.debug=false
#
# ####################################
#jvm.java.security.krb5.kdc=
#jvm.java.security.krb5.realm=
#mms.kerberos.principal=
#mms.kerberos.keyTab=
#mms.kerberos.debug=

# #####################################
# LDAP Module (optional)
#
# MMS can be configured to use a LDAP server for authentication. Only users
# in the configured LDAP groups will be authorized to login in to MMS. Different
# LDAP groups can be mapped to different roles within MMS.
#
#######################################
#
# mms.ldap.url: The LDAP URL MMS should use to connect to the LDAP server. For example,
#               ldaps://my-ldap-server.com:636/ would connect to a SSL LDAP server on
#               my-ldap-server.com running on port 636. ldap:// should be used for a
#               non-SSL LDAP server.
#
# mms.ldap.bindDn: The LDAP user used to perform the initial search.
#
# mms.ldap.bindPassword: The LDAP password for the bindDn user.
#
# mms.ldap.user.baseDn: The base DN that MMS uses to perform the LDAP search.
#
# mms.ldap.user.searchAttribute: The LDAP attribute we should be searching on. Typically a
#                                username or email address.
#
# mms.ldap.user.group: The LDAP attribute that contains a user's groups
#
# mms.ldap.global.role.owner: The LDAP group that should have full privileges to all of MMS.
#
#mms.ldap.url=
#mms.ldap.bindDn=
#mms.ldap.bindPassword=
#mms.ldap.user.baseDn=
#mms.ldap.user.searchAttribute=
#mms.ldap.user.group=
#mms.ldap.global.role.owner=

# The following are optional LDAP parameters.
#
# mms.ldap.user.firstName: The LDAP attribute which contains the first name of the user
#
# mms.ldap.user.lastName: The LDAP attribute which contains the last name of the user
#
# mms.ldap.user.email: The LDAP attribute which contains the email address of the user
#
# If none of the optional mms.ldap.user fields are filled in, the value in the
# mms.ldap.user.searchAttribute will be used for the MMS username.
#
# mms.ldap.global.role: See http://mms.mongodb.com/help-hosted/current/reference/user-roles
#
#mms.ldap.user.firstName=
#mms.ldap.user.lastName=
#mms.ldap.user.email=
#mms.ldap.global.role.backupAdmin=
#mms.ldap.global.role.monitoringAdmin=
#mms.ldap.global.role.userAdmin=
#mms.ldap.global.role.readOnly=

# #######################################
# If you do not wish to use the MMS Automation capabilities, you may disable these
# feature by setting the value before to disabled
# #######################################
mms.featureFlag.automation=enabled
